@import './docs.tokens.scss';

*[class*='rsg--preview'] {
    .style-cols {
        .col,
        *[class*='col-'] {
            background: #ccc;
            border: 1px solid white;
            padding: 1rem 2rem;
            text-align: center;
        }
    }
}

.vds-example {
    position: relative;
    margin-bottom: $space-l;
    margin-top: calc($space-xl / 2);
    div[class^='rsg--root']{
        margin-bottom: 0;
    }
    .vds-example-toggle,
    div[class^='rsg--controls']{
        display: none;
    }
}
.section-components {
    .vds-example {
        // Only show example & view code
        // buttons on component pages
        .vds-example-toggle,
        div[class^='rsg--controls'] {
            display: block;
        }
        .vds-example-toggle {
            z-index: 100;
            position: absolute;
            right: 0;
            border: none;
            background: $docs-color-pink;
            color: $docs-color-white;
            padding: 4px 16px;
            font-size: $size-m;
            transition: background .2s;
            &:hover {
                background-color: darken($docs-color-pink, 10%);
            }
            &:focus, &:focus-within{
                box-shadow: 0 0 0 0.2rem #7edddc;
                outline: none;
            }
        }

    &.vds-example-full-screen {
        position: fixed;
        left: 0;
        top: 0;
        bottom: 0;
        overflow-y: scroll;
        z-index: 101;
        width: 100%;
            margin: 0;
        background: white;

        *[class^='rsg--tabs'],
        *[class^='rsg--tab'],
        div[class^=rsg--controls],
        .vueds-tabs,
        .react-codemirror2 {
            display: none;
        }

        *[class^='rsg--preview'] {
            border: none;
            border-radius: 0;
            box-shadow: none;
            padding: 0;
            margin: 0;
        }

        .vds-example-toggle {
            bottom: 40px;
            right: 40px;
            top: auto;
            }
        }
    }

    div[class^='rsg--preview'] {
        padding: 65px 40px 40px;
        background-color: $docs-color-white;
        border: 1px solid tint($docs-color-grey-med, 40%);
        border-radius: 0;
        display: block;
        width: 100%;
    }
    article[class^='rsg--root']{
        p[class^='rsg--para']{
            &:first-of-type{
                line-height: $line-height-m;
                font-size: $size-base;
                font-weight: $weight-normal;
            }
            @media (min-width: $docs-breakpoint-xl) {
                width: 90%;
            }
        }
    }
    div[class^='rsg--docs']{
        p[class^='rsg--para']{
            font-weight: 100;
            font-size: 28px;
            line-height: initial;
            margin: 0;
        }
    }
    div[class^='rsg--controls']{
        display: block;
        margin-bottom: 0;
        button[class^='rsg--button']{
            position: relative;
            text-transform: none;
            width: 100%;
            padding: 12px 40px;
            font-size: 20px;
            color: $docs-color-pink;
            border: 1px solid tint($docs-color-grey-med, 40%);
            border-top: 0;
            font-weight: 700;
            &:hover {
                color: $docs-color-pink;
            }
            &:focus {
                outline: 0;
                box-shadow: 0 0 0 0.2rem #7edddc inset;
            }
            &:after {
                content: '';
                background-image: url(../images/chevron-down.png);
                width: 20px;
                height: 12px;
                display: block;
        position: absolute;
                right: 40px;
                top: 40%;
                transition: all .2s;
            }
        }
        button[class*='rsg--isActive']{
            &:after{
                transform: rotate(-180deg);
            }
        }
    }
    div[class^='rsg--tabs']{
        div[class^='rsg--tabButtons']{
            margin-bottom: 0;
            button[class^='rsg--button']{
                border: 0;
                padding: 0;
                font-size: $size-xxl;
                line-height: $line-height-s;
                font-weight: $weight-semi-bold;
                text-transform: none;
                letter-spacing: -0.5px;
                margin: $space-base 0;
                color: $docs-color-heading;
                cursor: auto;
                @media (max-width: #{$docs-breakpoint}) {
                    font-size: calc($size-xl / 1.2);
                }
                &:hover {
                    color: $docs-color-heading;
                }
            }
        }
        div[class^='rsg--tabBody'] > div{
            table[class^=rsg--table]{
                margin-bottom: 70px;
                border-bottom: 1px #e8e8e8 solid;
                &:last-child{
                    margin-bottom: 0;
                }
                thead[class^=rsg--tableHead]{
                    th{
                        background: #ffffff;
                        color: $docs-color-heading;
                        padding: .5rem;
                    }
                }
                tbody{
                    tr{
                        border-bottom: 1px #e8e8e8 solid;
                    }
                    td{
                        padding: .5rem;
                        vertical-align: middle;
                        @media (min-width: #{$docs-breakpoint}) {
                            min-width: 110px;
                        }
                        p[class^=rsg--para]{
                            font-weight: $weight-normal;
        font-size: $size-m;
                        }
                    }
                }
            }
        }
    }
}
// Clearfix to take care of floated content inside previews
div[data-preview]:after {
    content: '';
    display: table;
    clear: both;
}
// Code tabs and table
div[class^='rsg--tabs'],
table[class^='rsg--table'] {
    margin-bottom: $space-xl;
    overflow-x: auto;
}
thead[class^='rsg--tableHead'] {
    border: 0;
}
// Codemirror and markdown code blocks
pre[class^='rsg--pre'],
.vueds-html.cm-s-base16-light.CodeMirror,
.react-codemirror2 .CodeMirror.CodeMirror {
    background: #f9f9f9;
    box-sizing: border-box;
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
    height: auto;
    border: 1px solid tint($docs-color-grey-med, 40%);
    border-top:0;
    font-family: Consolas, 'Liberation Mono', Menlo, monospace;
    font-size: $size-s;
    margin: 0;
    min-height: calc($space-xxl / 1.5);
    color: $docs-color-grey-dark;
    padding: $space-m;
    word-wrap: break-word;
    white-space: pre-wrap;
    word-break: normal;
    .CodeMirror-scroll,
    .CodeMirror-vscrollbar {
        overflow: hidden;
    }
    code {
        color: $docs-color-grey-dark;
    }
}
// HTML preview needs some padding adjustments to match Styleguidist
.vueds-html.cm-s-base16-light.CodeMirror {
    padding-left: $space-m - 4px;
}
// VUE & HTML Code tabs
div[class^='rsg--tab'] {
    position: relative;

    .vueds-tabs {
        z-index: 5;
        border-radius: $radius-default;
        overflow: hidden;
        position: absolute;
        top: $space-m;
        right: $space-m;
        .vueds-tab {
            border: 0;
            margin: 0;
            letter-spacing: $spacing-l;
            font-size: $size-s;
            font-weight: $weight-normal;
            font-family: $font-text;
            line-height: $line-height-s;
            @include inset-squish-space($space-s);
            cursor: pointer;
            background: $docs-color-purple;
            color: $docs-color-white;
            &:active, &--active {
                background: mix($docs-color-purple, $docs-color-rich-black, 80%);
        }

            &:focus {
            outline: none;
            }
            &--active {
                box-shadow: inset 0 2px 8px rgba($docs-color-rich-black, 0.2);
            }
        }
    }
}

// Hidden HTML/VUE code preview
.vueds-hidden {
    opacity: 0;
    visibility: hidden;
    display: none;
    z-index: -1;
    top: -10000px;
    left: 0;
    position: absolute !important;
        }
// Fixes a few layout bugs with CodeMirror
.CodeMirror-scroll.CodeMirror-scroll {
    overflow: hidden !important;
    }
// Code highlighting for both CodeMirror and Markdown files
.hljs-variable,
.hljs-selector-class,
.cm-s-base16-light span.cm-variable,
.cm-s-base16-light span.cm-variable-2,
.cm-s-base16-light span.cm-bracket,
.cm-s-base16-light span.cm-tag,
.hljs-tag,
.hljs-name {
    color: $docs-code-blue!important;
}
.hljs-attribute,
.hljs-keyword,
.hljs-attr,
.cm-s-base16-light span.cm-operator,
.cm-s-base16-light span.cm-number,
.cm-s-base16-light span.cm-attribute {
    color:  $docs-code-red!important;
}
.cm-s-base16-light span.cm-string,
.hljs-string {
    color: $docs-code-pink!important;
}
// Code highlighting elsewhere
span[class^='rsg--type'],
code[class^='rsg--code'],
code[class^='rsg--name'],
code.name{
    font-size: $size-s;
}
span[class^='rsg--type'],
code[class^='rsg--code'] {
    color: $docs-color-grey-dark;
}
code[class^='rsg--name'],
code.name {
    color: $docs-code-red;
}
span[class^='rsg--type']{
    color: $docs-color-grey-med;
}
span[class^='rsg--type'] code[class^='rsg--code'],
code.type {
    background: tint($docs-color-grey, 75%);
    color: shade($docs-color-silver, 20%);
    padding: $space-xx-small;
    border-radius: $radius-default;
}
