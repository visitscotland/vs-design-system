name: S3 Build and Deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["feature/*"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: {}

env:
  AWS_REGION: 'eu-west-2'

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    steps:
      - uses: DerYeger/yarn-setup-action@master
        with:
          node-version: 16

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: prepare
    
    steps:
      - uses: DerYeger/yarn-setup-action@master
        with:
          node-version: 16
  
      - name: 'Create env file'
        run: |
          echo "${{ secrets.VS_ENV_FILE }}" > .env
      - run: |
          yarn system:build

      - name: Upload Artifact
        id: upload
        uses: actions/upload-artifact@v3.1.2
        with:
          name: dist
          path: dist
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    # Create an environment for the static hosting
    environment:
      name: ds-s3-deployment
      url: ${{ steps.aws-sync.outputs.s3_url }}
      
    permissions:
      id-token: write
      contents: read
      
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          aws-region: ${{ env.AWS_REGION }}
          role-duration-seconds: 1200

      - name: Generate bucket name from branch name
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}
          GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
          echo "BUCKET_NAME=${GIT_BRANCH////-}-${GIT_HASH}" >> $GITHUB_ENV

      - name: Check if bucket already exists
        id: check-bucket
        run: |
          DOES_BUCKET_EXIST=$(aws s3api head-bucket --bucket $bucket_name 2>/dev/null && echo "true" || echo "false")
          echo "BUCKET_EXISTS=${DOES_BUCKET_EXIST}" >> $GITHUB_ENV
          
      - name: Create bucket in S3
        if: ${{ env.BUCKET_EXISTS }} === false
        run: |
          echo "Deploying branch ${{ env.GIT_BRANCH}}"
          commit_hash=`git rev-parse HEAD`
          aws s3api create-bucket --bucket ${{env.BUCKET_NAME}} --create-bucket-configuration LocationConstraint=eu-west-2
          aws s3api put-public-access-block --bucket ${{env.BUCKET_NAME}} --public-access-block-configuration "BlockPublicAcls=false,IgnorePublicAcls=false,BlockPublicPolicy=false,RestrictPublicBuckets=false"
          aws s3api put-bucket-policy --bucket ${{env.BUCKET_NAME}} --policy "{
            \"Version\": \"2012-10-17\",
            \"Statement\": [
                {
                    \"Sid\": \"PublicReadGetObject\",
                    \"Effect\": \"Allow\",
                    \"Principal\": \"*\",
                    \"Action\": \"s3:GetObject\",
                    \"Resource\": \"arn:aws:s3:::${{env.BUCKET_NAME}}/*\"
                }
            ]
          }"
          aws s3 website s3://${{ env.BUCKET_NAME }} --index-document index.html

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
    
      - name: Deploying to S3
        id: aws-sync
        run: |
          echo "Deploying to https://${{ env.BUCKET_NAME }}.s3.${{ env.AWS_REGION }}.amazonaws.com"
          commit_hash=`git rev-parse HEAD`
          aws s3 sync ./dist/system/ s3://${{env.BUCKET_NAME}}
          S3_URL=https://${{env.BUCKET_NAME}}.s3.${{env.AWS_REGION}}.amazonaws.com/index.html
          echo "S3_URL=${ S3_URL }" >> .env"

